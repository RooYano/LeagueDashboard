[{"E:\\CasualAlfredo\\LeagueDash\\league-dashboard\\src\\index.js":"1","E:\\CasualAlfredo\\LeagueDash\\league-dashboard\\src\\App.js":"2","E:\\CasualAlfredo\\LeagueDash\\league-dashboard\\src\\reportWebVitals.js":"3","E:\\CasualAlfredo\\LeagueDash\\league-dashboard\\src\\Components\\create-student.component.js":"4","E:\\CasualAlfredo\\LeagueDash\\league-dashboard\\src\\Components\\student-list.component.js":"5","E:\\CasualAlfredo\\LeagueDash\\league-dashboard\\src\\Components\\edit-student.component.js":"6","E:\\CasualAlfredo\\LeagueDash\\league-dashboard\\src\\Components\\StudentForm.js":"7","E:\\CasualAlfredo\\LeagueDash\\league-dashboard\\src\\Components\\StudentTableRow.js":"8"},{"size":500,"mtime":1642046805989,"results":"9","hashOfConfig":"10"},{"size":2022,"mtime":1642089111639,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1642046806049,"results":"12","hashOfConfig":"10"},{"size":1016,"mtime":1642129727163,"results":"13","hashOfConfig":"10"},{"size":1183,"mtime":1642134667732,"results":"14","hashOfConfig":"10"},{"size":1477,"mtime":1642051175600,"results":"15","hashOfConfig":"10"},{"size":2394,"mtime":1642089645903,"results":"16","hashOfConfig":"10"},{"size":1228,"mtime":1642093983502,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"x6t221",{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"20"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\CasualAlfredo\\LeagueDash\\league-dashboard\\src\\index.js",[],["38","39"],"E:\\CasualAlfredo\\LeagueDash\\league-dashboard\\src\\App.js",[],"E:\\CasualAlfredo\\LeagueDash\\league-dashboard\\src\\reportWebVitals.js",[],"E:\\CasualAlfredo\\LeagueDash\\league-dashboard\\src\\Components\\create-student.component.js",["40","41"],"import React, {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport StudentForm from './StudentForm';\r\n\r\nconst CreateStudent = () => {\r\n    const [formValues, setFormValues] =\r\n        useState({ name: '', email:'', rollno: ''})\r\n\r\n    const onSubmit = studentObject => {\r\n        axios.post(\r\n            'http://localhost:3000/students/create-student',\r\n                studentObject)\r\n                    .then(res =>  {\r\n                        if (res.status === 200) {\r\n                            alert('Student successfully created')\r\n                        }\r\n                        else {\r\n                            Promise.reject();\r\n                        }\r\n                    })\r\n                    .catch(err=> alert('Something went wrong2'))\r\n    }\r\n\r\n    return(\r\n        <StudentForm initialValues={formValues}\r\n            onSubmit={onSubmit}\r\n            enableReinitialize>\r\n                CreateStudent\r\n        </StudentForm>\r\n    )\r\n}\r\n\r\nexport default CreateStudent","E:\\CasualAlfredo\\LeagueDash\\league-dashboard\\src\\Components\\student-list.component.js",[],"E:\\CasualAlfredo\\LeagueDash\\league-dashboard\\src\\Components\\edit-student.component.js",["42"],"import React, {useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport StudentForm from './StudentForm';;\r\n\r\nconst EditStudent = (props) => {\r\n    const [formValues, setFormValues] = useState({\r\n        name:'',\r\n        email:'',\r\n        rollno:'',\r\n    });\r\n\r\n    const onSubmit = (studentObject) => {\r\n        axios\r\n            .put(\r\n                'http://localhost:3000/students/update-student' +\r\n                    props.match.params.id,\r\n                studentObject\r\n            )\r\n            .then((res) => {\r\n                if(res.status===200) {\r\n                    alert('student successfully updated');\r\n                    props.history.push('/student-list');\r\n                } else Promise.reject();\r\n            })\r\n            .catch((err) => alert('something went wrong'));\r\n    };\r\n\r\n    useEffect(() => {\r\n        axios\r\n            .get(\r\n                'http://localhost:3000/students/update-student'\r\n                + props.match.params.id\r\n            )\r\n            .then((res) => {\r\n                const {name, email, rollno} = res.data;\r\n                setFormValues({ name, email, rollno });\r\n            })\r\n            .catch((err) => console.log(err));\r\n    }, []);\r\n\r\n    return (\r\n        <StudentForm\r\n            initialValues={formValues}\r\n            onSubmit={onSubmit}\r\n            enableReinitialize\r\n        >\r\n            updateStudent\r\n        </StudentForm>\r\n    );\r\n\r\n};\r\n\r\nexport default EditStudent;","E:\\CasualAlfredo\\LeagueDash\\league-dashboard\\src\\Components\\StudentForm.js",["43"],"import React from 'react';\r\nimport * as Yup from 'yup';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport { FormGroup, FormControl, Button } from 'react-bootstrap';\r\n\r\nconst StudentForm = (props) => {\r\n    const validationSchema = Yup.object().shape({\r\n        name: Yup.string().required('Required'),\r\n        email: Yup.string()\r\n            .email('You have entered an invalid email address')\r\n            .required('Required'),\r\n        rollno: Yup.number()\r\n            .positive('invalid roll number')\r\n            .integer('invalid roll number')\r\n            .required('Required'),\r\n\r\n    });\r\n    console.log(props);\r\n\r\n    return (\r\n        <div className='form-wrapper'>\r\n            <Formik {...props} validationSchema={validationSchema}>\r\n                <Form>\r\n                    <FormGroup className='inputF'>Name:\r\n                        <Field name='name' type='text'\r\n                            className='form-control' />\r\n                        <ErrorMessage\r\n                            name='name'\r\n                            className='d-block invalid-feedback'\r\n                            component='span'\r\n                        />\r\n                    </FormGroup>\r\n                    <FormGroup className='inputF'>Email:\r\n                        <Field name='email' type='text'\r\n                            className='form-control' />\r\n                            <ErrorMessage\r\n                                name='email'\r\n                                className='d-block invalid-feedback'\r\n                                component='span'\r\n                            />\r\n                    </FormGroup>\r\n                    <FormGroup className='inputF'>Roll No.\r\n                        <Field name='rollno' type='number'\r\n                            className='form-control' />\r\n                        <ErrorMessage\r\n                            name='rollno'\r\n                            className='d-block invalid-feedback'\r\n                            component='span'\r\n                        />\r\n                    </FormGroup>\r\n                    <Button variant='danger' size='lg'\r\n                        block='block' type='submit'>\r\n                            {props.children}\r\n                        </Button>\r\n                </Form>\r\n            </Formik>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default StudentForm;","E:\\CasualAlfredo\\LeagueDash\\league-dashboard\\src\\Components\\StudentTableRow.js",[],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":1,"column":26,"nodeType":"50","messageId":"51","endLine":1,"endColumn":35},{"ruleId":"48","severity":1,"message":"52","line":6,"column":24,"nodeType":"50","messageId":"51","endLine":6,"endColumn":37},{"ruleId":"53","severity":1,"message":"54","line":39,"column":8,"nodeType":"55","endLine":39,"endColumn":10,"suggestions":"56"},{"ruleId":"48","severity":1,"message":"57","line":4,"column":21,"nodeType":"50","messageId":"51","endLine":4,"endColumn":32},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'setFormValues' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.match.params.id'. Either include it or remove the dependency array.","ArrayExpression",["60"],"'FormControl' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"61","fix":"62"},"Update the dependencies array to be: [props.match.params.id]",{"range":"63","text":"64"},[1223,1225],"[props.match.params.id]"]