[{"E:\\CasualAlfredo\\LeagueDash\\src\\index.js":"1","E:\\CasualAlfredo\\LeagueDash\\src\\App.js":"2","E:\\CasualAlfredo\\LeagueDash\\src\\reportWebVitals.js":"3","E:\\CasualAlfredo\\LeagueDash\\src\\Components\\student-list.component.js":"4","E:\\CasualAlfredo\\LeagueDash\\src\\Components\\edit-student.component.js":"5","E:\\CasualAlfredo\\LeagueDash\\src\\Components\\create-student.component.js":"6","E:\\CasualAlfredo\\LeagueDash\\src\\Components\\StudentForm.js":"7","E:\\CasualAlfredo\\LeagueDash\\src\\Components\\StudentTableRow.js":"8"},{"size":500,"mtime":1642046805989,"results":"9","hashOfConfig":"10"},{"size":2022,"mtime":1642089111639,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1642046806049,"results":"12","hashOfConfig":"10"},{"size":1259,"mtime":1642237582190,"results":"13","hashOfConfig":"10"},{"size":1477,"mtime":1642051175600,"results":"14","hashOfConfig":"10"},{"size":1016,"mtime":1642129727163,"results":"15","hashOfConfig":"10"},{"size":2394,"mtime":1642089645903,"results":"16","hashOfConfig":"10"},{"size":1298,"mtime":1645503874107,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"72djb0",{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\CasualAlfredo\\LeagueDash\\src\\index.js",[],"E:\\CasualAlfredo\\LeagueDash\\src\\App.js",[],"E:\\CasualAlfredo\\LeagueDash\\src\\reportWebVitals.js",[],"E:\\CasualAlfredo\\LeagueDash\\src\\Components\\student-list.component.js",[],"E:\\CasualAlfredo\\LeagueDash\\src\\Components\\edit-student.component.js",["37"],"import React, {useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport StudentForm from './StudentForm';;\r\n\r\nconst EditStudent = (props) => {\r\n    const [formValues, setFormValues] = useState({\r\n        name:'',\r\n        email:'',\r\n        rollno:'',\r\n    });\r\n\r\n    const onSubmit = (studentObject) => {\r\n        axios\r\n            .put(\r\n                'http://localhost:3000/students/update-student' +\r\n                    props.match.params.id,\r\n                studentObject\r\n            )\r\n            .then((res) => {\r\n                if(res.status===200) {\r\n                    alert('student successfully updated');\r\n                    props.history.push('/student-list');\r\n                } else Promise.reject();\r\n            })\r\n            .catch((err) => alert('something went wrong'));\r\n    };\r\n\r\n    useEffect(() => {\r\n        axios\r\n            .get(\r\n                'http://localhost:3000/students/update-student'\r\n                + props.match.params.id\r\n            )\r\n            .then((res) => {\r\n                const {name, email, rollno} = res.data;\r\n                setFormValues({ name, email, rollno });\r\n            })\r\n            .catch((err) => console.log(err));\r\n    }, []);\r\n\r\n    return (\r\n        <StudentForm\r\n            initialValues={formValues}\r\n            onSubmit={onSubmit}\r\n            enableReinitialize\r\n        >\r\n            updateStudent\r\n        </StudentForm>\r\n    );\r\n\r\n};\r\n\r\nexport default EditStudent;","E:\\CasualAlfredo\\LeagueDash\\src\\Components\\create-student.component.js",["38","39"],"import React, {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport StudentForm from './StudentForm';\r\n\r\nconst CreateStudent = () => {\r\n    const [formValues, setFormValues] =\r\n        useState({ name: '', email:'', rollno: ''})\r\n\r\n    const onSubmit = studentObject => {\r\n        axios.post(\r\n            'http://localhost:3000/students/create-student',\r\n                studentObject)\r\n                    .then(res =>  {\r\n                        if (res.status === 200) {\r\n                            alert('Student successfully created')\r\n                        }\r\n                        else {\r\n                            Promise.reject();\r\n                        }\r\n                    })\r\n                    .catch(err=> alert('Something went wrong2'))\r\n    }\r\n\r\n    return(\r\n        <StudentForm initialValues={formValues}\r\n            onSubmit={onSubmit}\r\n            enableReinitialize>\r\n                CreateStudent\r\n        </StudentForm>\r\n    )\r\n}\r\n\r\nexport default CreateStudent","E:\\CasualAlfredo\\LeagueDash\\src\\Components\\StudentForm.js",["40"],"import React from 'react';\r\nimport * as Yup from 'yup';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport { FormGroup, FormControl, Button } from 'react-bootstrap';\r\n\r\nconst StudentForm = (props) => {\r\n    const validationSchema = Yup.object().shape({\r\n        name: Yup.string().required('Required'),\r\n        email: Yup.string()\r\n            .email('You have entered an invalid email address')\r\n            .required('Required'),\r\n        rollno: Yup.number()\r\n            .positive('invalid roll number')\r\n            .integer('invalid roll number')\r\n            .required('Required'),\r\n\r\n    });\r\n    console.log(props);\r\n\r\n    return (\r\n        <div className='form-wrapper'>\r\n            <Formik {...props} validationSchema={validationSchema}>\r\n                <Form>\r\n                    <FormGroup className='inputF'>Name:\r\n                        <Field name='name' type='text'\r\n                            className='form-control' />\r\n                        <ErrorMessage\r\n                            name='name'\r\n                            className='d-block invalid-feedback'\r\n                            component='span'\r\n                        />\r\n                    </FormGroup>\r\n                    <FormGroup className='inputF'>Email:\r\n                        <Field name='email' type='text'\r\n                            className='form-control' />\r\n                            <ErrorMessage\r\n                                name='email'\r\n                                className='d-block invalid-feedback'\r\n                                component='span'\r\n                            />\r\n                    </FormGroup>\r\n                    <FormGroup className='inputF'>Roll No.\r\n                        <Field name='rollno' type='number'\r\n                            className='form-control' />\r\n                        <ErrorMessage\r\n                            name='rollno'\r\n                            className='d-block invalid-feedback'\r\n                            component='span'\r\n                        />\r\n                    </FormGroup>\r\n                    <Button variant='danger' size='lg'\r\n                        block='block' type='submit'>\r\n                            {props.children}\r\n                        </Button>\r\n                </Form>\r\n            </Formik>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default StudentForm;","E:\\CasualAlfredo\\LeagueDash\\src\\Components\\StudentTableRow.js",[],{"ruleId":"41","severity":1,"message":"42","line":39,"column":8,"nodeType":"43","endLine":39,"endColumn":10,"suggestions":"44"},{"ruleId":"45","severity":1,"message":"46","line":1,"column":26,"nodeType":"47","messageId":"48","endLine":1,"endColumn":35},{"ruleId":"45","severity":1,"message":"49","line":6,"column":24,"nodeType":"47","messageId":"48","endLine":6,"endColumn":37},{"ruleId":"45","severity":1,"message":"50","line":4,"column":21,"nodeType":"47","messageId":"48","endLine":4,"endColumn":32},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.match.params.id'. Either include it or remove the dependency array.","ArrayExpression",["51"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'setFormValues' is assigned a value but never used.","'FormControl' is defined but never used.",{"desc":"52","fix":"53"},"Update the dependencies array to be: [props.match.params.id]",{"range":"54","text":"55"},[1223,1225],"[props.match.params.id]"]